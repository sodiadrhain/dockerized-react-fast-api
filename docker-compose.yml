version: "3"
services:
  web:
    container_name: frontend_react_web_app
    build: ./frontend/.
    ports: 
      - "5173:5173"
    networks:
      - main_network
  postgres:
    container_name: postgres
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=fast_api_db
    ports:
      - "5432:5432"
    volumes:
      - data-volume:/var/lib/postgresql/data
    networks:
      - main_network
  api:
    container_name: backend_fast_api
    build: ./backend/.
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=fast_api_db
      - POSTGRES_SERVER=postgres
      - POSTGRES_PORT=5432
    depends_on:
      - postgres
    command: >
      sh -c "poetry run bash ./prestart.sh &&
             poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000"
    networks:
      - main_network
  adminer:
    container_name: adminer
    image: adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - main_network
  proxymanager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginxproxymanager
    restart: unless-stopped
    volumes:
      - npm-volume:/data
      - npm-volume:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
      - "8090:81"
    networks:
      - main_network
volumes:
  data-volume:
  npm-volume:
networks:
  main_network:
      driver: bridge